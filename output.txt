cc -g compiler.c get_next_linev2/get_next_line.c get_next_linev2/get_next_line_utils.c &&  ./a.out demo.c
output sufix	: .รง-compiler.c
includes[]	: /usr/include
includes[]	: /usr/local/include
sources[]	: demo.c
__________
parsing: demo.c
0:	#
1:	import
2:	<
3:	รง
4:	.
5:	h
6:	>
__________
parsing: /usr/include/รง.h
-- parse(/usr/include/รง.h) returned 4242
__________
parsing: /usr/local/include/รง.h
-- parse(/usr/local/include/รง.h) returned 4242
[1mdemo.c:1:20: [31merror: [0m[1m'รง.h' file not found[0m
7:	#
8:	import
9:	<
10:	test
11:	>
__________
parsing: /usr/include/test
-- parse(/usr/include/test) returned 4242
__________
parsing: /usr/local/include/test
-- parse(/usr/local/include/test) returned 4242
[1mdemo.c:1:39: [31merror: [0m[1m'test' file not found[0m
12:	#
13:	import
14:	"
15:	test
16:	.
17:	c
18:	"
__________
parsing: test.c
0:	macro
1:	int
2:	f
3:	(
4:	int
5:	x
6:	)
7:	{
8:	return
9:	x
10:	;
11:	}
Macro fn[int f ( int x ) { return x ;}]
__________
19:	macro
20:	int
21:	f
22:	(
23:	int
24:	x
25:	)
26:	{
27:	return
28:	(
29:	x
30:	)
31:	;
32:	}
Macro fn[int f ( int x ) { return ( x ) ;}]
33:	#
34:	import
35:	"
36:	test
37:	.
38:	c
39:	"
[1mtest.c:1:36: [31merror: [0m[1mFile 'test.c' already included !
[0m
40:	macro
41:	rule
42:	(
43:	Hello
44:	<
45:	word
46:	>
47:	!
48:	)
49:	{
50:	return
51:	(
52:	cat
53:	(
54:	"
55:	Hello
56:	 
57:	dear
58:	 
59:	"
60:	,
61:	word
62:	)
63:	)
64:	;
65:	}
Macro pattern[pattern='Hello < word >!'
	body='return ( cat ( " Hello   dear   " , word ) );']
66:	int
67:	main
main begins at 66
68:	(
69:	int
70:	ac
71:	,
72:	char
73:	*
74:	*
75:	av
76:	)
77:	{
78:	printf
79:	(
80:	"
81:	Hello
82:	 
83:	Doe
84:	!
85:	"
86:	)
87:	;
88:	return
89:	(
90:	0
91:	)
92:	;
93:	}
compiler: 
0:	#
1:	import
2:	 
3:	<
4:	รง
5:	.
6:	h
7:	>
8:	

9:	#
10:	import
11:	 
12:	<
13:	test
14:	>
15:	

16:	#
17:	import
18:	 
19:	"
20:	test
21:	.
22:	c
23:	"
24:	

25:	}
26:	

27:	

28:	}
29:	

#include <stdio.h> #include "get_next_linev2/get_next_line.h" Hello < word >! int main(int ac, char **av) { Hello < word >! return (0); }
__________
file demo.c.รง-compiler.c generated!
